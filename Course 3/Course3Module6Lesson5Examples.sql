-- Script file associated with lesson 5
-- All statements execute in both Oracle and PostgreSQL unless noted.
-- Examples in lesson notes and extra examples not shown in lesson notes

-- Example 1
-- Order entry tables
-- The SELECT statement in the SELECT clause returns a single value.
-- The CASE statement tests the value generated by the SELECT statement.

SELECT OrdNo, ProdNo,
 CASE WHEN (OrdNo, ProdNo) IN
  ( SELECT OrdNo, ProdNo
     FROM OrdLine )
     THEN 1 ELSE 0 END AS Basket
 FROM OrderTbl, Product
-- Optional ORDER BY clause
 ORDER BY OrdNo, ProdNo;

-- Example 2
-- Store sales tables
-- Basket identified by a combination of CustId, TimeNo, and ItemId
-- DISTINCT for ItemId count because the combination of CustId, TimeNo, and StoreId is not unique in SSSales.
-- Only practical for subsets of customers, products, and time periods

SELECT CustId, TimeNo, StoreId, ItemId,
 CASE WHEN (CustId, TimeNo, StoreId, ItemId) IN 
  ( SELECT CustId, TimeNo, StoreId, ItemId
     FROM SSSales )
   THEN 1 ELSE 0 END AS Basket
 FROM SSCustomer, SSTimeDim, SSStore, SSItem
-- Optional ORDER BY clause
 ORDER BY CustId, TimeNo, StoreId, ItemId;

-- Example 3
-- Extended SQL for matrix input
-- Not in lesson notes
-- Conditions on OrderTbl and Product tables to reduce the size of the cross product

SELECT OrdNo, ProdNo,
 CASE WHEN (OrdNo, ProdNo) IN
  ( SELECT OrdNo, ProdNo
     FROM OrdLine )
     THEN 1 ELSE 0 END AS Basket
 FROM OrderTbl, Product
 WHERE OrdDate BETWEEN '01-Jan-2021' AND '31-Jan-2021'
   AND ProdMfg = 'Connex'
 ORDER BY OrdNo, ProdNo;

-- Example 4
-- Condition eliminates orders with only 1 product
-- Association rule algorithms require baskets with at least 2 products.
-- Not in lesson notes

SELECT OrdNo, ProdNo,
 CASE WHEN (OrdNo, ProdNo) IN
  ( SELECT OrdNo, ProdNo
     FROM OrdLine )
     THEN 1 ELSE 0 END AS Basket
 FROM OrderTbl, Product
 WHERE OrdNo IN
  ( SELECT OrdNo 
     FROM OrdLine OL2 
     GROUP BY OL2.OrdNo
     HAVING COUNT(*) > 1 )
   AND OrdDate BETWEEN '01-Jan-2021' AND '31-Jan-2021'
   AND ProdMfg = 'Connex'
 ORDER BY OrdNo, ProdNo;

-- Example 5
-- WHERE IN Condition eliminates baskets with only 1 item

SELECT C1.CustId, T1.TimeNo, S1.StoreId, I1.ItemId,
 CASE WHEN (CustId, TimeNo, StoreId, ItemId) IN 
  ( SELECT CustId, TimeNo, StoreId, ItemId
     FROM SSSales )
   THEN 1 ELSE 0 END AS Basket
 FROM SSCustomer C1, SSTimeDim T1, SSStore S1, SSItem I1
 WHERE (C1.CustId, T1.TimeNo, S1.StoreId) IN
  ( SELECT CustId, TimeNo, StoreId
     FROM SSSales S2
     GROUP BY CustId, TimeNo, StoreId
     HAVING COUNT(DISTINCT ItemId) > 1 )
 ORDER BY C1.CustId, T1.TimeNo, S1.StoreId, I1.ItemId;

-- Example 6
-- Conditions on dimension tables to reduce cross product size
-- IN condition to eliminate baskets with only 1 item

SELECT C1.CustId, T1.TimeNo, S1.StoreId, I1.ItemId,
 CASE WHEN (CustId, TimeNo, StoreId, ItemId) IN 
  ( SELECT CustId, TimeNo, StoreId, ItemId
     FROM SSSales )
   THEN 1 ELSE 0 END AS Basket
 FROM SSCustomer C1, SSTimeDim T1, SSStore S1, SSItem I1
 WHERE (C1.CustId, T1.TimeNo, S1.StoreId) IN
  ( SELECT CustId, TimeNo, StoreId
     FROM SSSales S2
     GROUP BY CustId, TimeNo, StoreId
     HAVING COUNT(DISTINCT ItemId) > 1 )
   AND S1.StoreState = 'CO'
   AND C1.CustState = 'CO'
   AND T1.TimeYear = 2021
 ORDER BY C1.CustId, T1.TimeNo, S1.StoreId, I1.ItemId;

-- Save query result as a CSV or XSLX file
-- In Excel, open the file. If CSV, convert to a xslx file.
-- Select the data. Insert a pivot table using the selected data. Set OrdNo as rows, ProdNo as columns, and Sum of Basket as the cells.
-- Copy the pivot table excluding computed rows or columns. Paste into a new sheet.
-- Save the new sheet as a CSV file for usage in rule associative rule mining algorithm.